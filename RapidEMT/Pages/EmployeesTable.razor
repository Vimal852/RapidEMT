@page "/employees"
@using RapidEMT.Models
@using RapidEMT.Services
@using RapidEMT.Components

<h1>
    <span style="color: #7e3d2f; font-size: 24px; font-weight: bold; font-style: bold;">ACTIVE EMPLOYEES</span>
</h1>
@if (Employees != null)
{
    <Card>
        <div class="table-responsive">
            <table class="table table-borderless mb-0">
                <tbody>
                    @foreach (var employee in Employees)
                    {
                        <tr class="shadow-lg m-1 employee-row mb-5">
                            <td class="centered-cell"><img class="round-image" width="60" src="@employee.ImgUrl" /></td>
                            <td>
                                <div class="pt-2">
                                    <div class="employee-name centered-subdiv">@employee.Name</div>
                                    <div class="employee-position centered-subdiv">@employee.Position.GetDisplayName()</div>
                                </div>
                            </td>
                            <td class="centered-cell @GetEmployeeTypeStyle(employee.Type)">@employee.Type.GetDisplayName()</td>
                            <td class="centered-cell employee-salary">$@employee.Salary</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </Card>
}

@code {
    [Inject] private IEmployeeService EmployeeService { get; set; }
    [Inject] private NavigationManager NavigationManager { get; set; }

    private List<Employee>? Employees;

    protected override async Task OnInitializedAsync()
    {
        var response = await EmployeeService.GetEmployeesAsync();
        Employees = response.Employees;
    }

    private string GetEmployeeTypeStyle(EmployeeType employeeType) => employeeType switch
    {
        EmployeeType.Freelance => "freelance",
        EmployeeType.PartTime => "part-time",
        EmployeeType.Casual => "casual",
        EmployeeType.FullTime => "full-time"
    };
}

